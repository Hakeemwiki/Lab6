{
  "Comment": "E-commerce data pipeline with validation, transformation, and error notification.",
  "StartAt": "CheckFileThreshold",
  "States": {
    "CheckFileThreshold": {
      "Type": "Pass",
      "Parameters": {
        "orders_count.$": "$.orders_count",
        "items_count.$": "$.items_count",
        "products_count.$": "$.products_count",
        "files.$": "$.files"
      },
      "ResultPath": "$.thresholds",
      "Next": "EvaluateThreshold"
    },
    "EvaluateThreshold": {
      "Type": "Choice",
      "Choices": [
        {
          "And": [
            {
              "Variable": "$.thresholds.orders_count",
              "NumericGreaterThanEquals": 5
            },
            {
              "Variable": "$.thresholds.items_count",
              "NumericGreaterThanEquals": 5
            },
            {
              "Variable": "$.thresholds.products_count",
              "NumericGreaterThanEquals": 1
            }
          ],
          "Next": "ValidateFiles"
        }
      ],
      "Default": "WaitForFiles"
    },
    "WaitForFiles": {
      "Type": "Wait",
      "Seconds": 300,
      "Next": "CheckFileThreshold"
    },
    "ValidateFiles": {
      "Type": "Task",
      "Resource": "arn:aws:states:::ecs:runTask.sync",
      "Parameters": {
        "Cluster": "ecommerce-data-pipeline-cluster",
        "TaskDefinition": "ecommerce-validator-task",
        "LaunchType": "FARGATE",
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "Subnets": ["subnet-0b7f371c5d05a61fd"],
            "SecurityGroups": ["sg-05ce9be02039057c5"],
            "AssignPublicIp": "ENABLED"
          }
        },
        "Overrides": {
          "ContainerOverrides": [
            {
              "Name": "validator-container",
              "Command": [
                "python",
                "validate.py",
                "$.thresholds.files[?(@.startsWith('incoming/orders_') && @.endsWith('.csv'))][0]",
                "$.thresholds.files[?(@.startsWith('incoming/order_items_') && @.endsWith('.csv'))][0]",
                "5"
              ]
            }
          ]
        }
      },
      "Retry": [
        {
          "ErrorEquals": ["States.TaskFailed", "States.Timeout"],
          "IntervalSeconds": 30,
          "MaxAttempts": 2,
          "BackoffRate": 2
        }
      ],
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "Next": "NotifyFailure"
        }
      ],
      "Next": "TransformFiles",
      "TimeoutSeconds": 600
    },
    "TransformFiles": {
      "Type": "Task",
      "Resource": "arn:aws:states:::ecs:runTask.sync",
      "Parameters": {
        "Cluster": "ecommerce-data-pipeline-cluster",
        "TaskDefinition": "ecommerce-transformer-task",
        "LaunchType": "FARGATE",
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "Subnets": ["subnet-0b7f371c5d05a61fd"],
            "SecurityGroups": ["sg-05ce9be02039057c5"],
            "AssignPublicIp": "ENABLED"
          }
        }
      },
      "Retry": [
        {
          "ErrorEquals": ["States.TaskFailed", "States.Timeout"],
          "IntervalSeconds": 60,
          "MaxAttempts": 3,
          "BackoffRate": 2
        }
      ],
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "Next": "NotifyFailure"
        }
      ],
      "Next": "ResetLock",
      "TimeoutSeconds": 1800
    },
    "ResetLock": {
      "Type": "Task",
      "Resource": "arn:aws:states:::aws-sdk:s3:deleteObject",
      "Parameters": {
        "Bucket": "lab6-ecommerce-shop",
        "Key": "incoming/pipeline.lock"
      },
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "Next": "NotifyFailure"
        }
      ],
      "Next": "Success"
    },
    "NotifyFailure": {
      "Type": "Task",
      "Resource": "arn:aws:states:::aws-sdk:sns:publish",
      "Parameters": {
        "TopicArn": "arn:aws:sns:eu-north-1:771826808190:ReceivepipelineAlerts",
        "Message": "An error occurred during the e-commerce pipeline execution.",
        "Subject": "E-Commerce Pipeline Failure"
      },
      "Next": "LogFailure"
    },
    "LogFailure": {
      "Type": "Task",
      "Resource": "arn:aws:states:::aws-sdk:cloudwatch:putMetricData",
      "Parameters": {
        "Namespace": "ECommerce",
        "MetricData": [
          {
            "MetricName": "PipelineFailure",
            "Value": 1,
            "Unit": "Count"
          }
        ]
      },
      "End": true
    },
    "Success": {
      "Type": "Succeed"
    }
  }
}
